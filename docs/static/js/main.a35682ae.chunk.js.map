{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","cat","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","setCategories","category","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAiBpC,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAI,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAClCN,EAAc,MAKlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAOd,GAAP,uBAAAe,EAAA,6DACbC,EADa,iDACmCC,UAAUjB,GAD7C,+DAGAkB,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKA,UAAU,MAAMC,IAAKf,EAAKgB,IAAKN,IACpC,4BAAIA,QCJHO,EAAU,SAAC,GAAa,IAAXjC,EAAU,EAAVA,IAAU,ECFT,SAACA,GAAS,IAAD,EACNC,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAHmB,mBACzBC,EADyB,KAClBC,EADkB,KAgBhC,OAVAC,qBAAU,WACNvB,EAAQd,GACHsC,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,IAEIC,EDJ2BK,CAAYxC,GAAhC2B,EAVkB,EAUxBN,KAAca,EAVU,EAUVA,QAEtB,OACI,qCACI,6BAAKlC,IACJkC,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAMQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEzBxBgB,EAAe,WAAM,MAEMxC,mBAAS,CAAC,YAFhB,mBAEvBQ,EAFuB,KAEXiC,EAFW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAa1C,IAAK0C,IAClB,uBAIA,6BAGQjC,EAAWc,KAAI,SAACoB,GAAD,OACX,cAAC,EAAD,CAEI3C,IAAK2C,GADAA,Y,MCpBjCC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.a35682ae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ cat }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            cat(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    cat: PropTypes.func.isRequired\r\n}","export const getGifs = async (cat) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(cat)}&limit=20&api_key=Hh2M0MJa6ek7FPUK1IrGxqVtnJt4vaMR`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    /* console.log(gifs); */\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    /* console.log(id, title, url); */\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDownBig\">\r\n            <img className=\"img\" src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\n/* import { getGifs } from '../helpers/getGifs'; */\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ cat }) => {\r\n\r\n    /* const [count, setCount] = useState(0) */\r\n    /* const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getGifs(cat)\r\n            .then(setImages)\r\n    }, [cat]); */\r\n\r\n    const { data: images, loading } = useFetchGif(cat);\r\n\r\n    return (\r\n        <>\r\n            <h3>{cat}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {/* <h3>{count}</h3> */}\r\n                {/* <button onClick={() => setCount(count + 1)}></button> */}\r\n\r\n                {/* <li key={id}>{title}</li> */}\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGif = (cat) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(cat)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    /* const categories = [\"Vikings\", \"Dragon ball\", \"Eminem\"]; */\r\n    const [categories, setCategories] = useState([\"Vikings\"]);\r\n\r\n    /* const handleAdd = () => {\r\n      setCategories([...categories, \"Oye Arnold\"]);\r\n    }; */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory cat={setCategories} />\r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ul>\r\n                {\r\n                    /* <li key={category}> {category} </li>) */\r\n                    categories.map((category) => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            cat={category} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));"],"sourceRoot":""}